/**********************************************************************************************************************
***************************************************      HOW TO      **************************************************
***********************************************************************************************************************/
• Fix User Home for Bash (Why would I want my files on some random U drive & not my local?!?! )
    1. Open System Environment Variables
    2. Click New to Create a New User Environment Variable
    3. User Environment Variable Popup Values...
        + Variable Name = HOME
        + Variable Value = C:\Users\USER_ID
    4. Re-open Bash & Run the following Command...
        cd $HOME; pwd
    5. Output should be similar to...
        NV@NV MINGW64 ~
        $ cd $HOME; pwd
        /c/Users/C7F7Q8
• Generate SSH Key & Add To Agent & Add to GitHub
    1. Open bash & Run:
        ssh-keygen -t ed25519 -C <email@email.com>
    2. Hit Enter a few times, accepting default location & phrase
    3. Run Command to Add Key to SSH Agent
        ssh-add ~/.ssh/id_ed25519
        - If error: Could not open a connection to your authentication agent.
            + Might need to start ssh-agent.  Run command:
                eval `ssh-agent -s`
    4. Go to: https://github.com/settings/ssh/new
    5. Run Below Command to Copy SSH Key
        clip < ~/.ssh/id_ed25519.pub
    6. Paste Key on Github & Click 'Add SSH Key'
• Update GitHub Username (4.6.22 ~ Only Semi-Worked.  Display Name still reverts back to ID.)
    + The default username when logging into GitHub is your LAN ID. 
        - LAN ID is a terrible value to use as the commit username.
    1. Go to https://git.express-scripts.com/settings/admin
    2. If prompted, login; then Click 'Change Username' Button
        - The recommended username is first initial and last name. 
        - Example: John Smith ⇒ jsmith OR john-smith
            + Depending on what usernames are available.
    3. You will see scary language about something. Ignore it and just click the I understand button.
• Install Cloud Foundry (CF) CLI on Windows
    1. Go to Cloud Foundry Webpage
        https://docs.cloudfoundry.org/cf-cli/install-go-cli.html
    2. Ctrl+F 'Binaries' & Follow Link for Latest Version
        https://github.com/cloudfoundry/cli/wiki/V8-CLI-Installation-Guide#installers-and-compressed-binaries
    - OR - 
    1. Install using Choco (https://community.chocolatey.org/packages/cloudfoundry-cli)
        choco install cloudfoundry-cli
• (OLD) Install NVM for Windows
    1. Go to link below & download latest setup exe
        https://github.com/coreybutler/nvm-windows/releases
    2. Run exe & then open GitBash and run below command to list npm versions currently installed
        nvm list
    3. If required version does not appear in results, run following command to install new version
        nvm install v##.##.#
    4. NVM should automatically set the newly installed version, but you can check by running the following
        node -v; npm -v
    5. If version is not what you expected, run below command to tell nvm to use the correct version
        nvm use v##.##.#
• (NEW) Setup NVM on Windows
    + Notes
        - I did NOT remove existing node installations like nvm setup docs suggested.  Worked fine, smh.
    1. Go to URL below & download 'nvm-setup.exe'
        https://github.com/coreybutler/nvm-windows/releases/1.1.11
        + There are newer versions, BUT they do not work in GitBash.  No thanks!
            - More than welcome to download the latest version & run NVM exclusively in PowerShell.
    2. Run nvm-setup.exe (Elevated privileges, if possible.)
        + Accept Terms
        + Click Next (default path)
        + Click Next (default path - unless you have node installed elsewhere)
    3. Click Install
        + Might see popup if Node is already installed; select yes.  (We want NVM to control it.)
    4. Open terminal & run below command to verify installation
        $ nvm -v
        1.1.11
    5. Assuming step 4 was successful, next we need to find the required version of node.
        + If npm/yarn install threw error, the required version should be in the error message.
            Ex. error @azure/core-lro@2.6.0: The engine "node" is incompatible with this module.  Expected version ">=18.0.0". Got "16.20.2".
        + If setting up a new project, required version SHOULD be in package.json
        + For curiosities sake, if you'd like to see a list of possible node versions you can select to install, run command below
            $ nvm list available
            |   CURRENT   |     LTS     |  OLD STABLE  | OLD UNSTABLE |
            |-------------|-------------|--------------|--------------|
            |    21.7.1   |   20.11.1   |   0.12.18    |   0.11.16    |
            |    21.7.0   |   20.11.0   |   0.12.17    |   0.11.15    |
            |    xx.x.x   |   xx.xx.x   |   x.xx.xx    |   x.xx.xx    |
    6. Next, run install command below w/ the new required node version
        $ nvm install 18.19.1
        Downloading node.js version 18.19.1 (64-bit)...
        Extracting node and npm...
        Complete
        npm v10.2.4 installed successfully
    7. Lastly, we need to tell NVM we want to use the new version of node we just installed.
        a. Run below command (w/ your node version)
            $ nvm use 18.19.1
            Now using node v18.19.1 (64-bit)
        b. Notes
            + Might get admin popups - should be able to attest/close and continue w/o issue.
        c. Validation
            + To validate the node version NVM is using, run following command
                $ nvm current
                v18.19.1
        d. Help
            + If you forgot what version you just installed or the version you had before, run command below to list installed versions
                $ nvm list
                  * 18.19.1 (Currently using 64-bit executable)
                    16.20.2
    8. If/when you want/need to swap node versions, simply re-run nvm command
        $ nvm use 16.20.2
        Now using node v16.20.2 (64-bit)
