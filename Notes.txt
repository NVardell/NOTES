/**********************************************************************************************************************
************************************************      COPY/PASTE      *************************************************
***********************************************************************************************************************/
• 
• 
• 




/**********************************************************************************************************************
***************************************************      TERMS      ***************************************************
***********************************************************************************************************************/
• TTF: TrueType Font
• WOFF: Web Open Font Format
• 



/**********************************************************************************************************************
***************************************************      NOTES      ***************************************************
***********************************************************************************************************************/
• Emojis
      - ✔️ ✅ ℹ⚠️❌
      - 💔 ❤ 🔥 💯
      - ☁ ⚡️ ⛅ ⛈
      - 🤦🏽‍ 🤷🏼‍♂️🤦🏼‍♂️🙌🏽 🤞🏽 👍🏽 👍 👎🏽 👌🏽
      - ☠ 👿 😂 🤓 👓 😎 😢 😛 😭 🥳 😉 🙃 🤔 🥰 😱 🤯🤣 🥹😁 😍
      - 🚘 ✈ 🎢 🖥️ 🧩 🍿 👓🎄 👑 💡 💰 🍎 🥂 🍕 & 🍌🍞
      - 💤 🧊🏃🏽
• Symbols
      - ∞
      - ° - Degrees
      - ®
      - ⁰ ¹ ² ³ ⁴ ⁵ ⁶ ⁷ ⁸ ⁹
      - Ω
      - ⇑
      - → ⇀ ⇢ ⇾ ⇝ ⇥ ↠ ⇸ ⇻ ⇴ ⇰ ⇏ ⇒ ⇛
      - ↓ ↯ ⇓
      - ≠ ≈
      - ≤ ≥
      - ✓
      - ♥ ♡ ❥
      - • ○
      - ★ ☆
      - ☐ ☑ ☒
      - ■ □ ◆ ◇
      - ▴ ▵ ▲ △ ▶ ▷
      - ⚥ (Undecided)
      - ♀ (Female (â™€))
      - ♂ (Male (â™))
      - • ‣ ⁃ ⁌ ⁍ ∙ ○ ● ◘ ◦ ⦾ ⦿
      - ☙ ❧
• Extensions
    + .pub = Public Key File (SSH)
• Environment Variables
    + NTS
        - Want to throw these into an encrypted file, generated by current bash encrypt/decrypt functions.
        - Possibly... Write new bash function to auto decrypt env variables and add them to PATH instead of manual entry.
        - Could store variables as encrypted strings in bashrc & then decrypt them in new function. (Can pass in secret.)
    + JAVA = C:\Program Files\Java\jdk-16.0.2
    + MVN = C:\Program Files\Apache\Maven\3.8.1
    + NODE = C:\Program Files\nodejs\
• Topics
    + SSH Keys
        - Used to establish a secure connection with a server.
        - Add key to SSH Agent, which manages SSH Keys & remembers passphrases. (Won't require password every time.)




/**********************************************************************************************************************
***************************************************      COLORS      **************************************************
***********************************************************************************************************************/
• BASH
    + Foreground
        - 128,255,128
        - 0,191,191
• SUBLIME
    + Background
        - (Old) #292D3E ~ 
        - (New) #161821 ~ 22, 24, 33
    + Bottom Toolbar
        - (Old BG) #2a2d3e ~ 42,45,62
• WEBSTORM
    + Tear Line (FG) ~ #2F334D ⇛ #2F4D4A ⇛ #FFD88C
    + Teal Line Selection (FG) ~ #444A73 ⇛ #5E4473 ⇛ #BAFF8C
    + Indent Guide (BG) ~ #444A73 ⇛ #574473 ⇛ #8CB4FF
    + Indent Guide Selected (BG) ~ #444A73 ⇛ #447371 ⇛ #7EDBD9
• Fun
    - #BAFFA7
    - #BAFFAF
    - #F1FCEF
    - #DDF8D7
    
• Decal
    - Navy Background  - #183C66
    - Orange Triangles - #FAA619
    - Accent           - #C4494F
• Personal Default Putty Colors
    - FG = 181, 230, 29
    - BG = 50, 54, 57
• Other
    - Poke Table Header Green - 80, 192, 120
• IntelliJ
    - Material Moonlight
        + Caret/Cursor     - #4FD6BE
        + Caret/Cursor Row - #2F334D
        + White-spaces     - #828BB8
        + Text Highlight   - #444A73
            - Generated Color Palette Scheme
                #895B8C  #757687  #C25450
                #CD6C8C  #00BEBB  #2A324B
                #FD8C7A  #C8CCFD
                #FFBE67  #DBEFEE
                #F9F871  #348B88
                #7D6497  #6CFACD
                #BD7DB2  #21C197
                #DD8ABC  #008A64
                #767BA7  #708AF4
                #A9AABC  #454655




/**********************************************************************************************************************
***************************************************      LINKS      ***************************************************
***********************************************************************************************************************/
• License
    + 
• Proxies
    + 




/**********************************************************************************************************************
**************************************************      HOW-TO      ***************************************************
***********************************************************************************************************************/
• Generate SSH Key
    1. Run Key Generation Command (Adding Email Makes it easier to identify keys when there are multiple.)
        ssh-keygen -t ed25519 -C "nvardell@gmail.com"

        // For Legacy Systems that do not support the Ed25519 Algorithm
        ssh-keygen -t rsa -b 4096 -C "nvardell@gmail.com"
    2. Hit 'Enter' Key 3 times to use default file name, location, & no password.
        - This creates a new SSH key, using the provided email as a label.
        - Default file location: /c/Users/NV/.ssh/id_ed25519
• Add SSH Private Key to SSH Agent
    + Notes
        - The SSH agent manages your SSH keys and remembers your passphrase.
        - If your key has a passphrase and you don't want to enter the passphrase every time you use 
          the key, you can add your key to the SSH agent.
    1. Start SSH Agent in the background (Should print ProcessID after execution.)
        eval $(ssh-agent -s)
    2. Run SSH Add Command below. (Requires SSH Agent to be Running. Else error message appears.)
        ssh-add ~/.ssh/id_ed25519

        // Legacy
        ssh-add ~/.ssh/id_rsa
• Copy Public SSH Key to Clipboard
    1. Run command below
        clip < ~/.ssh/id_ed25519.pub

        // Legacy
        clip < ~/.ssh/id_rsa.pub
 Add SSH Key to GitHub
    1. Copy Public SSH Key
        clip < ~/.ssh/id_ed25519.pub
    2. Open browser to Github
        start https://github.com/settings/ssh/new
    3. Enter SSH Key Title
        ex. Work Laptop
    4. Paste Public Key copied in Step 1
    5. Click 'Add SSH Key' 
• Add SSH Key to SourceTree
    1. Open SourceTree ⇒ Tools ⇒ Create or Import SSH Keys
    2. Conversions ⇒ Import Key ⇒ Select 'id_rsa' file
    3. Click 'Save Private Key'
    4. Right click Putty icon in Windows bottom toolbar & click 'Add Key'
    5. Select new ppk file from Step #3
• Google Image Search
    + Force results to be a specific size
        - Append 'imagesize:WIDTHxHEIGHT' to end of search
        - Mainly for when I search for new Desktop Backgrounds
• Add VBA Macro to Excel (Example: Get URL hyperlink from a cell.)
    1. Open VB Editor: Alt+F11
    2. Open Macro Editor: Insert->Module
    3. Write/Paste VB Code & Save
        Ex.
            Function URL(rng As Range) As String
            On Error Resume Next
            URL = rng.Hyperlinks(1).Address
            End Function
    4. Use new Macro like any function
        Ex.
            =URL(A2)




/**********************************************************************************************************************
*************************************************      COMPUTERS      *************************************************
***********************************************************************************************************************/
• Auto Imports Settings - Never use wildcard import
    1. Navigate menus 
        File → Settings → Editor → Code Style → Java → Imports (Tab)
    2. Set value to 99 for the fields:
        + "Class count to use import with '*'"
        + "Names count to use static import with '*'"
    3. Click 'Apply' & 'OK'
• Remove right wrap margin vertical line on editor
    1. File → Settings → Editor → General → Appearance
    2. Uncheck box next to 'Show hard wrap guide...'
• Change Editor background color
    1. File → Settings → Editor → Color Scheme → General
    2. Click 'Text' dropdown in main panel 
    3. Select 'Default Text' & update value for 'Background'
        ---   WILL ALSO NEED TO UPDATE GUTTER BACKGROUND COLOR TO MATCH   ---
    1. Click 'Editor' dropdown in same main panel 
    2. Select 'Gutter background' & update value for 'Background'
• SOFTWARE
    + iTunes
        - Error Code 42110/45054
            1. File Explorer: C:\ProgramData\AppleComputer\iTunes
            2. Delete:
                + Folder: adi
                + Folder: SC Info
            3. Restart Computer
        - Backup Common Files
            + Contacts
                - AddressBook.sqlitedb Contains Major Contact Info
                    31bb7ba8914766d4ba40d6dfb6113c8b614be442
                - AddressBookImages.slitedb Contains Contact Image Data
                    cd6702cea29fe89cf280a76794405adb17f9a0ee
            + Messages
                - iMessages & SMS Messages (SQLite)
                    3d0d7e5fb2ce288813306e4d4636395e047a3d28
            + Call History
                - iPhone call History (SQLite)
                    5a4935c78a5255723f707230a451d79c540d2741
            + Photos
                - Contains Photos Info
                    12b144c0bd44f2b3dffd9186d3f9c05b917cee25
            + Home Screen & Lock Screen Wallpaper
                - Home Screen Wallpaper
                    b97b0c3bc8a6bb221d0849b450fbd92b5d06a301
                - Lock Screen Wallpaper
                    86736007d0166a18c646c567279b75093fc066fe
    + InteliJ
        - Auto Imports Settings - Never use wildcard import
            1. Navigate menus 
                File → Settings → Editor → Code Style → Java → Imports (Tab)
            2. Set value to 99 for the fields:
                + "Class count to use import with '*'"
                + "Names count to use static import with '*'"
            3. Click 'Apply' & 'OK'
        - Remove right wrap margin vertical line on editor
            1. File → Settings → Editor → General → Appearance
            2. Uncheck box next to 'Show hard wrap guide...'
        - Change Editor background color
            1. File → Settings → Editor → Color Scheme → General
            2. Click 'Text' dropdown in main panel 
            3. Select 'Default Text' & update value for 'Background'
                ---   WILL ALSO NEED TO UPDATE GUTTER BACKGROUND COLOR TO MATCH   ---
            1. Click 'Editor' dropdown in same main panel 
            2. Select 'Gutter background' & update value for 'Background'
• BUILDS
    + 2020
        - BIOS
            * Intel PXE Option ROM
                * Pre-boot EXecution Environment - Allows setting Onboard LAN as a Boot Device.
            *  





/**********************************************************************************************************************
*********************************************      UNIX/BASH COMMANDS      ********************************************
***********************************************************************************************************************/
• Certificates & KetStores & KeyTool Examples
    + Create a keystore
        keytool -genkey -alias selfsigned_localhost -keyalg RSA -keysize 2048 -validity 700 -keypass changeit -storepass changeit -keystore ssl-server.jks
    + View certificate info in a keystore file
        keytool -list -v -keystore [keystore name] -storepass [keystore password]
        keytool -list -v -keystore cacerts -storepass changeit
• Choco
    + Install delta for git diff
        choco install delta
• Curl
    + Flags
        -X → --request  → specify HTTP method
        -H → --header   → specify header (ex. -H 'Accept: application/json')
        -d → --data     → request body
        -v → --verbose  → 
        -s → --silent   → 
        -u → --user     → username:password
        -k → --insecure → allow insecure server connections (disables cert verification for https connections)
• Find
    + Past uses
        - Find & count files with specific name
            find . -maxdepth 3 -type f -name ESPhar* | wc -l
    + Flags
        -exec command ;
            Executes the specified command on the 'found' files.
            Execute command; true if 0 status is returned.  
            All following arguments to find are taken to be arguments to the command 
            until an argument consisting of ';' is encountered. 
        -exec command {} + 
            AKA Plus ('+') Version of Exec Command
            This variant of the -exec action runs the specified command on the selected files, 
            but the command line is built by appending each selected file name at the end; 
            the total number of invocations of the command will be much less than the number 
            of matched files. The command line is built in much the same way that xargs builds 
            its command lines. Only one instance of '{}' is allowed within the command. 
            The command is executed in the starting directory.
        -iname
            Pattern - Like 'name' but is case insensitive
        -name
            Pattern that defines the base of a filename
        -print
            Prints the full file name followed by a newline            
    + Search by filename
        find . -type f -name file.txt
    + Search by file extension
        find . -type f -name "*.log" -print
    + Delete all empty directories
        find . -type d -empty -delete
    + Delete all matching files in current directory
        find . -type f -iname "*.iml" -delete
    + Find specific string in current directory
        find . -type f -exec grep -H 'SEARCH STRING' {} +
    + Use Find to execute a command in all subdirectories (Exa)
        find . -mindepth 1 -maxdepth 1 -type d -print -exec ls -lrt {} +
    + Examples
        1. Find & Move
            find path_A -name '*AAA*' -exec mv -t path_B {} +
                -exec = Replaces the {} for every result in turn, running the command you give it.
                exec+ = So that we run as few 'mv' (move) operations as possible. (Note in flags.)
                    (In reference to the '+' at the end of the '-exec'.) 
• Grep
    + Search a *.gz file
        zgrep SearchString /path/to/file.gz
• Gunzip (Unpack/extract/uncompress files (Ex. *.tar.gz → *.tar (Removes '.gz')))
    gunzip <.tar.gz file>
• Less
    + View a *.gz file
        gzip -cd /path/to/file.gz | less
• LS
    + Flags
        -l      → NA                        → Print results in list format
        -a      → --all                     → Show hidden files/folders
        -h      → --human-readable          → Prints file sizes in readable format (ex. 5mb)
        -t      → NA                        → Sort by time, newest first
        -r      → --reverse                 → Reverse sort order
        --g     → --group-directories-first → Forces directories to top of list. (Not sure why it needs 2-'s.) 
        --color → NA                        → Print directories in diff color. (Other things too, I think.)
• Path / Environment Variables
    + Adding to PATH
        export PATH=/opt/apache-maven-3.6.0/bin:$PATH
    + Check environment variable value
        echo $JAVA_HOME
    + Print all PATH & Environment Details/Functions
        env
• Tail
    + Tail multiple log files
        tail -fn 20 /path/to/log/file.log /path/to/log/file/file.log 
• Unpack/extract tar (Tape ARchive) file
    tar xvf  <.tar file>
    tar xzvf <.tar.gz file>
    tar xjvf <.tar.bz2 file>
    + Options
        x - extract files from an archive
        v - verbosely list files processed
        f - use archive file or device ARCHIVE
        z - filter the archive through gzip
        j - filter the archive through bzip2
• Vim
    + Save & Quit
        :wq
• OTHER
    + Reset/clear/empty old log file by setting the size of the file to 0.
            truncate -s 0 logfile
    + Display window dimensions in browser console
            window.innerWidth + ' x ' + window.innerHeight
    + Move files between remote server & local
        - Remote ⇰ Local
                scp c7f7q8@genesys@SERVER@cyberarkpsmp:/opt/path/to/file.json ~/Desktop
        - Local ⇰ Remote
                scp /Users/c7f7q8/Documents/Bot/config.json c7f7q8@genesys@SERVER@cyberarkpsmp:/opt/path/to/directory/
    + Send email
        - Insert file contents into body of email
            mail -s "EMAIL SUBJECT" email@address.com < myAwesomeFile.txt
        - Insert Grep results into the body of an email
            grep -R 'FIND ME' /path/to/dir/and/files/toSearch/*log | mail -s 'Grep Results' email@address.com
    + ZIP Files
        - Compress a Directory Full of Files into a ZIP File
            zip -r FILE.zip DIRECTORY/
        - Uncompress a ZIP file Into the Current Directory
            unzip FILE.zip






/**********************************************************************************************************************
************************************************      GIT COMMANDS      ***********************************************
***********************************************************************************************************************/
• Untrack a local file so changes are ignored (File will remain in git repo.)
    git update-index --skip-worktree <file>
    git update-index --assume-unchanged <file> (Older Version - Also works.)
• Stop tracking a file (File will be removed from repo on next push.)
    git rm --cached <file>
• Applying an updated .gitignore & removing all previously tracked files that we now want ignored
    1. Commit everything - including gitignore
    2. Remove everything from the repo
        git rm -r --cached .
            + rm        = Remove Command
            + -r        = Recursive Removal
            + --cached  = Only remove files from the index. (Files will still exist.)
            + .         = Indicates that ALL files will be untracked.
            + -n        = Add to test remove changes, just in case.
            + --dry-run = Add to test remove changes, just in case.
    3. Re-add Everything back to the repo
        git add .
    4. Commit & Push
        git commit -m "Reapplying .gitignore with latest changes"
• Tell Git who you are
    git config --global user.name "Sam Smith"
    git config --global user.email sam@example.com
• Create a new local repo
    git init
• Push all branches to remote repo
    git push --all origin
• Update Local Clone Default Origin Branch Name. (Ex. master ⇛ main)
    git branch -m master main
    git fetch origin
    git branch -u origin/main main
    git remote set-head origin -a

    




/**********************************************************************************************************************
********************************************      WINDOWS SHENANIGANS      ********************************************
***********************************************************************************************************************/
• Excel
    + Date Formats
        - MMM.d ~ h:mm AM/PM       Mar.31 ~ 5:27 PM
        - MMM.d ~ ddd              Apr.26 ~ Tue
    + Rename Table / Find Table Name
        1. Select any Cell Within the Table
        2. Go to...  Table Tools > Design > Properties > Table Name (Top Left Corner)
    + Manually detect Circular References in Excel
        1. Go to tab 'Formulas'
        2. Select 'Error-checking' and 'Circular References'. 
            Excel will show you exactly in which cell(s) circular references are detected.
• Check environment variable value
    echo %JAVA_HOME%
• Add to PATH
    set PATH=%PATH%;c/path/to/exe
• Create a redirect between two folders (Used for iTunes backup to store on external drive instead of filling C Drive.)
    + General Command
        MkLink /J "%AppData%\Apple Computer\MobileSync\Backup" "I:\MobileSync\Backup"
    + Steps
        1. Create new destination directory where Backups will reside
        2. Cut the existing Backup directory & paste in newly created directory
        3a. Force iTunes to look for Backups in the new directory, run:
            MkLink /J "%AppData%\Apple Computer\MobileSync\Backup" "D:\MobileSync\Backup"
        3b. If iTunes is from Windows Store, run:
            MkLink /J "%UserProfile%\Apple\MobileSync\Backup" "D:\MobileSync\Backup"
• Magically find a missing drive when windows can't (Found my I:\ Drive at work when LVDI failed to find it.)
    subst I: %USERPROFILE%\Scratch
• Windows 10 Registry Startup Programs Location`
    + Open Registry = Windows+R & regedit
    + Location in Registry Editor
        HKCU\SOFTWARE\Microsoft\Windows\CurrentVersion\Run
    + Above auto navigated to location below
        Computer\HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run
• SFC (System File Checker) tool for repairing common Windows files and system structures.
    + ⭐⭐⭐ It should be used before running DISM.
    + SFC will scan the integrity of all protected operating system files, including those that are not on your hard drive. 
    + Scans all protected system files, and replace corrupted files with a cached copy that is located in a compressed 
      folder at %WinDir%\System32\dllcache.
            sfc /scannow
    + Copy SFC log to txt doc on Desktop
            findstr /c:"[SR]" %windir%\Logs\CBS\CBS.log >"%userprofile%\Desktop\cbs_sfc_scan.log"
            findstr /c:"[SR]" C:\Windows\Logs\CBS\CBS.log > ~\OneDrive\Desktop\cbs_sfc_scan.log
• DISM ~ Scan Windows Image for file corruptions
    + CheckHealth option with the Deployment Image Servicing and Management command tool allows you quickly determine 
      if there are any corruptions inside the local Windows 10 image.
        DISM /Online /Cleanup-Image /CheckHealth
    + ScanHealth option performs a more advanced scan to determine if the OS image has any problems.
        DISM /Online /Cleanup-Image /ScanHealth
    + RestoreHealth option to scan and repair common issues automatically.
        DISM /Online /Cleanup-Image /RestoreHealth
• Disk Check
    + Repair Hard Drive Errors. Repairs will automatically start on hard drive, then asked to restart your device.
        chkdsk/f C:
• Network Stats
    + Find app running on specific port
        netstat -ano | findstr :3001
    + TasKill Process On that Port
        taskkill /PID <yourID> /F
    + V2 ~ Kill Process Listening on Port 53
        kill $(lsof -t -i:53)
    + Linux
        - Find Process on port (lots of options)
            $ lsof -i :<port>
            $ sudo ss -lptn 'sport = :<port>'
            $ fuser <port>/tcp
        - Kill process
            $ fuser -k <port>/tcp
• Validate a files CheckSum (Generally MD5 - Can also be SHA1, SHA256, SHA512, etc.)
    certutil -hashfile MEUpdateTool.exe MD5
• Clear Console
    cls
• Open File Explorer to 'Applications' (Kinda like Mac OS Apps List View.)
    shell:AppsFolder
• Search File Explorer for Specific Type
    kind:Directory 2021
    kind:Image
    kind:Video
• Disk Defrag Optimization
    + Defrag C Drive without admin permissions, HA! 😎
        [POWERSHELL] Optimize-Volume -DriveLetter C -ReTrim -Verbose
• Script Execution Policies
    + Ref: https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_execution_policies?view=powershell-7.2
    + Policies
            EXECUTION POLICY    GROUP POLICY
            -----------------------------------------------------------------
            Unrestricted        Allow all scripts
            RemoteSigned        Allow local scripts and remote signed scripts
            AllSigned           Allow only signed scripts
            -----------------------------------------------------------------
    + Managing the execution policy with PowerShell
        - The following command gets the effective execution policy:
            Get-ExecutionPolicy
        - To get all of the execution policies that affect the current session & display in precedence order:
            Get-ExecutionPolicy -List
                + The result looks similar to the following sample output:
                        Scope ExecutionPolicy
                        ----- ---------------
                        MachinePolicy       Undefined
                           UserPolicy       Undefined
                              Process       Undefined
                          CurrentUser    RemoteSigned
                         LocalMachine       AllSigned
                + In this case, the effective execution policy is RemoteSigned because the execution policy
                  for the current user takes precedence over the execution policy set for the local computer.
        - Get execution policy for CurrentUser scope
                Get-ExecutionPolicy -Scope CurrentUser
        - To change your execution policy
                Set-ExecutionPolicy -ExecutionPolicy <PolicyName>
        - Update Execution Policy to allow running scripts from Windows PowerShell
                Set-ExecutionPolicy -ExecutionPolicy RemoteSigned
        - remove the execution policy for all the users of the local computer
                Set-ExecutionPolicy -ExecutionPolicy Undefined -Scope LocalMachine
        - To remove the execution policy for a Scope
                Set-ExecutionPolicy -ExecutionPolicy Undefined -Scope CurrentUser




/**********************************************************************************************************************
**********************************************      MAC SHENANIGANS      **********************************************
***********************************************************************************************************************/
• Make Library Folder Not Hidden
    chflags nohidden ~/Library/




/**********************************************************************************************************************
*******************************************      JETBRAINS SHENANIGANS      *******************************************
***********************************************************************************************************************/
• WEBSTORM / INTELLIJ
    - Plugins
        + Foldable
            * Ignore List
                .husky deployments dockercopy .dockerignore codeowners dockerfile package-lock.json jenkinsfile .npmrc .prettier* .env .gitignore yarn.lock




/**********************************************************************************************************************
***************************************************      OTHER      ***************************************************
***********************************************************************************************************************/
• 


----- BEGIN LICENSE -----
Nate Vardell
Single User License
E3D2-1318367-478796
6674E627 9148834E 2844D433 87229036
D2A71412 D83CC094 ADF4FFDB 664C7489
DDD4288D DB9654A3 1ED1544B A749B577
6FE31D6F 8A57F232 19534AC3 B44337C9
44FDDB5C 97E33D39 CA71B691 2E3ED73D
2E5DCC0F 6AB7794D 82557B34 38EA2CD6
5DEDCD84 037926C9 5E4467A6 0EA46E8D
2FA34A60 12C3E7A2 82300781 AC12A325
------ END LICENSE ------